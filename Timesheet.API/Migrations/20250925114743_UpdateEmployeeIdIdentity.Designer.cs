// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Timesheet.API.DbContexts;

#nullable disable

namespace Timesheet.API.Migrations
{
    [DbContext(typeof(TimesheetContext))]
    [Migration("20250925114743_UpdateEmployeeIdIdentity")]
    partial class UpdateEmployeeIdIdentity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("Timesheet.API.Entities.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CNP")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ContractType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            CNP = "1234567890123",
                            ContractType = 0,
                            FirstName = "Ana",
                            LastName = "Blandiana"
                        },
                        new
                        {
                            EmployeeId = 2,
                            CNP = "9876543210987",
                            ContractType = 1,
                            FirstName = "Ion",
                            LastName = "Gladiatorul"
                        },
                        new
                        {
                            EmployeeId = 3,
                            CNP = "4567891234567",
                            ContractType = 0,
                            FirstName = "Maria",
                            LastName = "Ioana"
                        },
                        new
                        {
                            EmployeeId = 4,
                            CNP = "7891234567891",
                            ContractType = 2,
                            FirstName = "Catalin",
                            LastName = "Botezatul"
                        });
                });

            modelBuilder.Entity("Timesheet.API.Entities.TimeEntry", b =>
                {
                    b.Property<Guid>("TimeEntryId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HoursWorked")
                        .HasColumnType("INTEGER");

                    b.HasKey("TimeEntryId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("TimeEntries");
                });

            modelBuilder.Entity("Timesheet.API.Entities.UserAccount", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Email");

                    b.HasIndex("EmployeeId");

                    b.ToTable("UserAccounts");
                });

            modelBuilder.Entity("Timesheet.API.Entities.TimeEntry", b =>
                {
                    b.HasOne("Timesheet.API.Entities.Employee", null)
                        .WithMany("TimeEntries")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Timesheet.API.Entities.UserAccount", b =>
                {
                    b.HasOne("Timesheet.API.Entities.Employee", null)
                        .WithMany("UserAccounts")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Timesheet.API.Entities.Employee", b =>
                {
                    b.Navigation("TimeEntries");

                    b.Navigation("UserAccounts");
                });
#pragma warning restore 612, 618
        }
    }
}
